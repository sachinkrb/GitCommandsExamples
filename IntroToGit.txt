sachi@LAPTOP-SACHIN MINGW64 ~/Desktop
$ mkdir gittest

sachi@LAPTOP-SACHIN MINGW64 ~/Desktop
$ cd gittest

sachi@LAPTOP-SACHIN MINGW64 ~/Desktop/gittest
$ vi s1

sachi@LAPTOP-SACHIN MINGW64 ~/Desktop
$ mkdir gittest

sachi@LAPTOP-SACHIN MINGW64 ~/Desktop
$ cd gittest

sachi@LAPTOP-SACHIN MINGW64 ~/Desktop/gittest
$ vi s1

sachi@LAPTOP-SACHIN MINGW64 ~/Desktop/gittest
$ git init
Initialized empty Git repository in C:/Users/sachi/Desktop/gittest/.git/

sachi@LAPTOP-SACHIN MINGW64 ~/Desktop/gittest (master)
$ git config --global user.name "Sachin R"

sachi@LAPTOP-SACHIN MINGW64 ~/Desktop/gittest (master)
$ git config --global user.email "sirhalostreams@gmail.com"

sachi@LAPTOP-SACHIN MINGW64 ~/Desktop/gittest (master)
$ git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        s1

nothing added to commit but untracked files present (use "git add" to track)

sachi@LAPTOP-SACHIN MINGW64 ~/Desktop/gittest (master)
$ git add s1
warning: LF will be replaced by CRLF in s1.
The file will have its original line endings in your working directory

sachi@LAPTOP-SACHIN MINGW64 ~/Desktop/gittest (master)
$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)

        new file:   s1


sachi@LAPTOP-SACHIN MINGW64 ~/Desktop/gittest (master)
$ git commit -m "add file s1"
[master (root-commit) e7667ba] add file s1
 1 file changed, 1 insertion(+)
 create mode 100644 s1

sachi@LAPTOP-SACHIN MINGW64 ~/Desktop/gittest (master)
$ git status
On branch master
nothing to commit, working tree clean

sachi@LAPTOP-SACHIN MINGW64 ~/Desktop/gittest (master)
$ git log
commit e7667baa13621c5095c88f04d6c567b0bb6a1027 (HEAD -> master)
Author: Sachin R <sirhalostreams@gmail.com>
Date:   Wed May 8 12:11:49 2019 -0500

    add file s1

sachi@LAPTOP-SACHIN MINGW64 ~/Desktop/gittest (master)
$ vi s2

sachi@LAPTOP-SACHIN MINGW64 ~/Desktop/gittest (master)
$ vi s1

sachi@LAPTOP-SACHIN MINGW64 ~/Desktop/gittest (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   s1

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        s2

no changes added to commit (use "git add" and/or "git commit -a")

sachi@LAPTOP-SACHIN MINGW64 ~/Desktop/gittest (master)
$ git diff
warning: LF will be replaced by CRLF in s1.
The file will have its original line endings in your working directory
diff --git a/s1 b/s1
index 9daf6c1..14c498a 100644
--- a/s1
+++ b/s1
@@ -1 +1,2 @@
 This is the first line for s1
+This is the first edit for s1
#ONLY SHOWS THE DIFFERENCE BETWEEN STAGING AREA AND WORKING TREE. NOT COMMITS.
#FILE S2 IS STILL IN THE WORKING TREE AND NOT STAGED UNTIL NOW.

sachi@LAPTOP-SACHIN MINGW64 ~/Desktop/gittest (master)
$ git add .
warning: LF will be replaced by CRLF in s1.
The file will have its original line endings in your working directory
warning: LF will be replaced by CRLF in s2.
The file will have its original line endings in your working directory

sachi@LAPTOP-SACHIN MINGW64 ~/Desktop/gittest (master)
$ git status
On branch master
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        modified:   s1
        new file:   s2


sachi@LAPTOP-SACHIN MINGW64 ~/Desktop/gittest (master)
$ git diff --staged
diff --git a/s1 b/s1
index 9daf6c1..14c498a 100644
--- a/s1
+++ b/s1
@@ -1 +1,2 @@
 This is the first line for s1
+This is the first edit for s1
diff --git a/s2 b/s2
new file mode 100644
index 0000000..4856511
--- /dev/null
+++ b/s2
@@ -0,0 +1 @@
+This is the first line for s2 file.
#SHOWS THE DIFFERENCE BETWEEN STAGED AND COMMITS.

sachi@LAPTOP-SACHIN MINGW64 ~/Desktop/gittest (master)
$ git commit -m "add s2 and edit s1"
[master a376c6c] add s2 and edit s1
 2 files changed, 2 insertions(+)
 create mode 100644 s2

sachi@LAPTOP-SACHIN MINGW64 ~/Desktop/gittest (master)
$ git log
commit a376c6c0fe3915374755c8fb06bdd0c0c800b201 (HEAD -> master)
Author: Sachin R <sirhalostreams@gmail.com>
Date:   Wed May 8 12:32:34 2019 -0500

    add s2 and edit s1

commit e7667baa13621c5095c88f04d6c567b0bb6a1027
Author: Sachin R <sirhalostreams@gmail.com>
Date:   Wed May 8 12:11:49 2019 -0500

    add file s1

sachi@LAPTOP-SACHIN MINGW64 ~/Desktop/gittest (master)
$ git rm s2
rm 's2'
#REMOVES S2 FROM WORKING TREE AND STAGING AS WELL AT THE SAME TIME.

sachi@LAPTOP-SACHIN MINGW64 ~/Desktop/gittest (master)
$ git status
On branch master
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        deleted:    s2


sachi@LAPTOP-SACHIN MINGW64 ~/Desktop/gittest (master)
$ git commit -m "remove s2"
[master 7d4966b] remove s2
 1 file changed, 1 deletion(-)
 delete mode 100644 s2
#REMOVE IT FROM THE COMMIT AS WELL.

sachi@LAPTOP-SACHIN MINGW64 ~/Desktop/gittest (master)
$ git log
commit 7d4966b32b4b4f6725e73b7f182cace3b7870157 (HEAD -> master)
Author: Sachin R <sirhalostreams@gmail.com>
Date:   Wed May 8 12:37:47 2019 -0500

    remove s2

commit a376c6c0fe3915374755c8fb06bdd0c0c800b201
Author: Sachin R <sirhalostreams@gmail.com>
Date:   Wed May 8 12:32:34 2019 -0500

    add s2 and edit s1

commit e7667baa13621c5095c88f04d6c567b0bb6a1027
Author: Sachin R <sirhalostreams@gmail.com>
Date:   Wed May 8 12:11:49 2019 -0500

    add file s1

sachi@LAPTOP-SACHIN MINGW64 ~/Desktop/gittest (master)
$ vi s1

sachi@LAPTOP-SACHIN MINGW64 ~/Desktop/gittest (master)
$ git diff
warning: LF will be replaced by CRLF in s1.
The file will have its original line endings in your working directory
diff --git a/s1 b/s1
index 14c498a..c5b7a23 100644
--- a/s1
+++ b/s1
@@ -1,2 +1,3 @@
 This is the first line for s1
 This is the first edit for s1
+This is the second edit for s1

sachi@LAPTOP-SACHIN MINGW64 ~/Desktop/gittest (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   s1

no changes added to commit (use "git add" and/or "git commit -a")
#ONLY IN WORKING TREE, NOT STAGED AS OF NOW.

sachi@LAPTOP-SACHIN MINGW64 ~/Desktop/gittest (master)
$ git checkout -- s1
#THIS WILL GET BACK S1 FROM STAGE AS IT IS. THE MODIFICATION
#HAS BEEN DISCARDED
#SINCE IT WASN'T COMMITTED, ITS NOT COMING BACK.

sachi@LAPTOP-SACHIN MINGW64 ~/Desktop/gittest (master)
$ git diff

sachi@LAPTOP-SACHIN MINGW64 ~/Desktop/gittest (master)
$ git status
On branch master
nothing to commit, working tree clean

sachi@LAPTOP-SACHIN MINGW64 ~/Desktop/gittest (master)
$ vi s1

sachi@LAPTOP-SACHIN MINGW64 ~/Desktop/gittest (master)
$ git diff
diff --git a/s1 b/s1
index 14c498a..18667c9 100644
--- a/s1
+++ b/s1
@@ -1,2 +1,3 @@
 This is the first line for s1
 This is the first edit for s1
+This is the third edit for s1

sachi@LAPTOP-SACHIN MINGW64 ~/Desktop/gittest (master)
$ git add s1

sachi@LAPTOP-SACHIN MINGW64 ~/Desktop/gittest (master)
$ git diff

sachi@LAPTOP-SACHIN MINGW64 ~/Desktop/gittest (master)
$ git diff --staged
diff --git a/s1 b/s1
index 14c498a..18667c9 100644
--- a/s1
+++ b/s1
@@ -1,2 +1,3 @@
 This is the first line for s1
 This is the first edit for s1
+This is the third edit for s1

sachi@LAPTOP-SACHIN MINGW64 ~/Desktop/gittest (master)
$  git status
On branch master
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        modified:   s1


sachi@LAPTOP-SACHIN MINGW64 ~/Desktop/gittest (master)
$ git reset HEAD s1
Unstaged changes after reset:
M       s1
# RESTORE FROM THE LATEST COMMIT
sachi@LAPTOP-SACHIN MINGW64 ~/Desktop/gittest (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   s1

no changes added to commit (use "git add" and/or "git commit -a")

sachi@LAPTOP-SACHIN MINGW64 ~/Desktop/gittest (master)
$ git checkout -- s1

sachi@LAPTOP-SACHIN MINGW64 ~/Desktop/gittest (master)
$ git status
On branch master
nothing to commit, working tree clean

sachi@LAPTOP-SACHIN MINGW64 ~/Desktop/gittest (master)
$  git log -- s2
commit 7d4966b32b4b4f6725e73b7f182cace3b7870157 (HEAD -> master)
Author: Sachin R <sirhalostreams@gmail.com>
Date:   Wed May 8 12:37:47 2019 -0500

    remove s2

commit a376c6c0fe3915374755c8fb06bdd0c0c800b201
Author: Sachin R <sirhalostreams@gmail.com>
Date:   Wed May 8 12:32:34 2019 -0500

    add s2 and edit s1

sachi@LAPTOP-SACHIN MINGW64 ~/Desktop/gittest (master)
$ git checkout a376c6c -- s2

sachi@LAPTOP-SACHIN MINGW64 ~/Desktop/gittest (master)
$ ls
s1  s2

sachi@LAPTOP-SACHIN MINGW64 ~/Desktop/gittest (master)
$ git status
On branch master
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        new file:   s2

# FROM COMMIT S2 CAME BACK TO BOTH WORKING TREE AND STAGING AREA

sachi@LAPTOP-SACHIN MINGW64 ~/Desktop/gittest (master)
$git commit -m "restored s2"
[master b1fd9fe] restored s2
 1 file changed, 1 insertion(+)
 create mode 100644 s2

# RE COMMITTING IT BACK TO COMMITS.

sachi@LAPTOP-SACHIN MINGW64 ~/Desktop/gittest (master)
$ get diff
bash: get: command not found

sachi@LAPTOP-SACHIN MINGW64 ~/Desktop/gittest (master)
$ git diff

sachi@LAPTOP-SACHIN MINGW64 ~/Desktop/gittest (master)
$ git diff --staged

sachi@LAPTOP-SACHIN MINGW64 ~/Desktop/gittest (master)
$touch myapp.pyc

sachi@LAPTOP-SACHIN MINGW64 ~/Desktop/gittest (master)
$ mkdir logs

sachi@LAPTOP-SACHIN MINGW64 ~/Desktop/gittest (master)
$ touch logs/log1.log

sachi@LAPTOP-SACHIN MINGW64 ~/Desktop/gittest (master)
$ touch logs/log2.log

sachi@LAPTOP-SACHIN MINGW64 ~/Desktop/gittest (master)
$ git status
On branch master
Untracked files:
  (use "git add <file>..." to include in what will be committed)

        logs/
        myapp.pyc

nothing added to commit but untracked files present (use "git add" to track)

sachi@LAPTOP-SACHIN MINGW64 ~/Desktop/gittest (master)
$ vi .gitignore

#IGNORE THE FILES TO BE STAGED.
sachi@LAPTOP-SACHIN MINGW64 ~/Desktop/gittest (master)
$ git status
On branch master
Untracked files:
  (use "git add <file>..." to include in what will be committed)

        .gitignore

nothing added to commit but untracked files present (use "git add" to track)

sachi@LAPTOP-SACHIN MINGW64 ~/Desktop/gittest (master)
$ git add .
warning: LF will be replaced by CRLF in .gitignore.
The file will have its original line endings in your working directory

sachi@LAPTOP-SACHIN MINGW64 ~/Desktop/gittest (master)
$ git commit -m "add .gitignore file"
[master f13c299] add .gitignore file
 1 file changed, 2 insertions(+)
 create mode 100644 .gitignore















